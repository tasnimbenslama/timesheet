pipeline{
    
    agent any 
environment {
        NEXUS_URL = 'http://192.168.1.3:8081'
        NEXUS_CREDENTIALS_ID = 'nexus-auth'
       
       
    }
    
    stages {
        
       
        stage('UNIT testing'){
            
            steps{
                
                script{
                    
                    sh 'mvn test'
                }
            }
        }
        stage('Integration testing'){
            
            steps{
                
                script{
                    
                    sh 'mvn verify -DskipUnitTests'
                }
            }
        }
        stage('Maven build'){
            
            steps{
                
                script{
                    
                    sh 'mvn clean install'
                }
            }
        }
  stage('Static code analysis'){
            
            steps{
                
                script{
                    
                    withSonarQubeEnv(credentialsId: 'SONARQUBE-TOKEN') {
                        
                        sh 'mvn clean package sonar:sonar'
                    }
                   }
                    
                }
            }

  stage('Deploy to Nexus') {
            steps {
                script {
                    // Nexus Repository Manager integration
                    def nexusArtifactUploader = Artifactory.newMavenBuild()

                    nexusArtifactUploader.deployer repo: 'new_repository', server: [
                        id: "${NEXUS_CREDENTIALS_ID}",
                        username: "${NEXUS_CREDENTIALS_ID}",
                        password: credentials("${NEXUS_CREDENTIALS_ID}")
                    ]

                    nexusArtifactUploader.deployPattern includes: '**/*'
                    nexusArtifactUploader.deploy buildInfo: 'buildinfo'
                }
            }
        }
    


def readFileFromSCM(filePath) {
    def scmVars = checkout scm
    def fileContent = readFile "${scmVars.GIT_COMMIT}/${filePath}"
    return fileContent
}


            }
}

